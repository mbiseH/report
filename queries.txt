


# <-------------------MUTATIONS FIRST------------------------------>



# mutation CreateProject(
# $projectClient: String!,
# $projectDescription: String!
# $projectEndDate: Date!
# $projectLeaderId: String!
# $projectMembers: [UserInput]!
# $projectName: String!
# $projectStartDate: Date!
# $projectStatus: String!){
#   CreateProject(
#     projectClient:$projectClient
#     projectDescription :$projectDescription
#     projectEndDate:$projectEndDate
#     projectLeaderId:$projectLeaderId
#     projectMembers:$projectMembers
#     projectName: $projectName
#     projectStartDate: $projectStartDate
#     projectStatus: $projectStatus
# )

#   {
#     project
#     {
#       projectName
#       projectId
#   } 
#     success
# }
#      {
#   "projectClient" : "wizara",
# "projectDescription": "iujkhj",
# "projectEndDate": "2022-08-02",
# "projectLeaderId": "VXNlck5vZGU6MQ==",
# "projectName":"New projekt",
# "projectStartDate": "2022-03-09",
# "projectStatus":"iuyuytu",
# "projectMembers" : [{"id": "VXNlck5vZGU6MQ=="}]
# }  

# }




# mutation verifyAccount
# {
#   verifyAccount(token:"eyJ1c2VybmFtZSI6ImVkd2luIiwiYWN0aW9uIjoiYWN0aXZhdGlvbiJ9:1oQ7zE:D-rc-3c3hkMY5MCO0goKtajLDHMXOTSnZ08mH-rGtcU")
#   {
#     success
#   }
# }



#  CreateRole($roleName: String)
# {
  
# {
#   "roleName": "Programmer"
# }

# mutation hjksk{
#   CreateRole(
#     roleName:"Manager"
#   )
#   {
#     role
#     {
#       roleId
#       roleName
#     }
#   }
# }



# query jk
# {
#   allRoles{
#     roleId
#     roleName
#     roleCreationDate
#   }
# }




# mutation register(
# $email: String!
# $username: String!
# $password1: String!
# $password2: String!
# )

# {
#   register(
#     email:$email, 
#     username:$username, 
# 		password1: $password1, 
#     password2:$password2){
#   success
#   errors
# }

#    {
#   "email": "edwin@gmail.com",
# "username": "edwin",
# "password1": "edwinpassword",
# "password2":"edwinpassword"
#   }   
# }











#   mutation CreateEnrollment(
#     $projectId: ID!,
#     $userId:ID!)
#     {
#       CreateEnrollment(
#         projectId:$projectId, 
#         userId:$userId)
#       {
#         enrollment{
#           enrollmentDate
#         }
#       }


#       {
#   "projectId": "12",
#   "userId": "VXNlck5vZGU6MQ=="
# }
#     }









# mutation DeleteProject($projectId: ID!)
# {
#   DeleteProject(projectId:$projectId)
#   {
#     project
#     {
#       projectName
#     }
#   }
#      {
#       "projectId":13
#     }
# }










#     mutation deleteEnrollment
#     {
#       DeleteEnrollment
#       (projectId:"8", userIdToBeRemoved:"VXNlck5vZGU6MQ==")
#       {
#         enrollment
#         {
#           enrollmentId
#         }
#       }
#     }








#     mutation UpdateProject(
# $projectClient: String
# $projectComments: String
# $projectDescription: String
# $projectEndDate: Date
# $projectId: ID!
# $projectLeaderId: ID
# $projectName: String
# $projectRemarks: String
# $projectStartDate: Date
# $projectStatus: String
#     )
#     {
#       UpdateProject(
#           projectClient: $projectClient
#           projectComments: $projectComments
#           projectDescription: $projectDescription
#           projectEndDate: $projectEndDate
#           projectId: $projectId
#           projectLeaderId: $projectLeaderId
#           projectName: $projectName
#           projectRemarks: $projectRemarks
#           projectStartDate: $projectStartDate
#           projectStatus: $projectStatus
#       )
#       {
#         project
#         {
#         projectId
#         projectName
#         projectStatus
#         projectStartDate
#         projectEndDate
#         projectClient
#         projectDescription
#         projectComments
#         projectRemarks
#         projectLeader {
#           username
#         }

#         tasksSet
#         {
#           taskId
#         }
#         projectMembers{
#           username

#         }
#       }
#     }
#       {
#   "projectId":12, 
#   "projectClient": "TCRA",
#   "projectComments": "Great",
#   "projectDescription": "No Description",
#   "projectEndDate": "2022-09-07",
#   "projectLeaderId": "VXNlck5vZGU6MQ==",
#   "projectName": "DevSecOps",
#   "projectRemarks":"Done",
#   "projectStartDate": "2022-09-07",
#   "projectStatus":"Completed"
# }

#     }








# mutation DeleteTask($taskId: ID!){
#   DeleteTask(
#     taskId:$taskId)
#   {
#     task
#     {
#       taskStatus
#     }
#   }
#   {
#   "taskId":"5"
# }

# }    











# <------------------------------------QUERIES NOW------------------------------>








query allProjects
{
  allProjects{
    projectName
    projectId
  }
}







# query allusers{
#   users{
#     edges
#     {
#       node{
#         id
#         username
#         role
#         {
#           roleName
#         }
#       }
#     }
#   }
# }












# query user{
#   user(id:"VXNlck5vZGU6Mg==")
#   {
#     username
#   }
# }






# query me{
#   me
#   {
#     id
#     username
#   }
# }






#    query allEnrollments {
#       allEnrollments
#       {
#         enrollmentId
# 				projectId
#         {
#           projectId
#         }
# userId {
#   id
# }
# enrollmentDate
# projectName
#       }
#     }








#     query oneProject{
#       oneProject(projectId:"12")
#       {
#         projectId
#         projectName
#         projectStatus
#         projectStartDate
#         projectEndDate
#         projectClient
#         projectDescription
#         projectComments
#         projectRemarks
#         projectLeader
#         {
#           username
#         id
#         }

#         tasksSet
#         {
#           taskId
#         }
#         projectMembers{
#           id

#         }
#       }
#     }








# query allEnrollments{
#   allEnrollments
#   {
#     enrollmentId
#     projectName
#     userId
#     {
#       username
#       id
#     }
#   }
# }    









# query allEnrollments
# {
#   allEnrollments
#   {
#     enrollmentId
#   }
# }









# query allTasksForAProject($projectId: ID)
# {
#   allTasksForAProject(
#     projectId:$projectId
#   )
#   {

#     taskStatus
#     taskDescription

#   }

#   {
#   "projectId":"8"
# }
# }








# mutation tokenAuth (
# $password: String!,
# $username: String
# ){
#   tokenAuth(
#     username: $username, 
#     password: $password
#   ) {
#     success,
#     errors,
#     unarchiving,
#     token,
#     refreshToken,
#     unarchiving,
#     user {
#       id,
#       username,
#     }
#   }
  
#   {
#   "password": "user2password",
#   "username":"user2"
# }
# }




# query allDelayedProjects
# {
#   allDelayedProjects
#   {
#     projectName
#   }
# }



# mutattion CreateReport{

# CreateReport(reportEndDate: Date!reportStartDate: Date!)
#   {
    
#   }

# }












query allTasksForAUserPerWeekPerProject{
  allTasksForAUserPerWeekPerProject(
    projectId:1
  userId: 1)
  
  {
    
    taskId
  }
}

# mutation updatetask{
#   UpdateTask(taskId:6,
#   taskStartDate:"2022-08-13")
#   {
#     task{
#       taskId
#       taskStartDate
#     }
#   }
# }







# mutation CreateTask (
# $projectId: ID!
# $taskCompletionDate: Date!
# $taskDescription: String!
# $taskStartDate: Date!
# $taskStatus: String!
# $userId: ID!
# ){
#   CreateTask(
#     projectId:$projectId, 
#     taskStatus:$taskStatus, 
#     taskCompletionDate:$taskCompletionDate, 
#     taskDescription:$taskDescription, 
#   taskStartDate:$taskStartDate, 
#     userId:$userId)
#   {
#     task
#     {
#       taskStartDate
#       projectId{
#         projectId
#       }
#     }
#   }
#   {
#   "projectId":1, 
#   "taskStatus":"task ya mbise ", 
#     "taskCompletionDate":"2022-08-10",
#   "taskDescription":"hjhj", 
#   "taskStartDate":"2022-08-25", 
#   "userId":"VXNlck5vZGU6MQ=="
# }
  
# }






# query allTasksForAProject(
#   $projectId: ID!)
#   {
#   allTasksForAProject(
#     projectId:$projectId)
#   {

#     taskId
#     taskStartDate
    

# }
#          {
  
#   "projectId":1
# }

#   }




# query CreateReport(
#   $reportEndDate: Date!,
#   $reportStartDate: Date!){

# createReport(
#   reportEndDate: $reportEndDate,
#   reportStartDate: $reportStartDate)
#   {
#     taskStatus
#     projectId
#     {
#       projectName
#     }
#   }
# {
#   "reportEndDate" : "2023-10-01",
#   "reportStartDate" :"2020-09-01"
# }
# }







# query allProjectsOfAParticularUser($userId: ID!)
# {
#  allProjectsOfAParticularUser(userId: $userId) {
#   projectName
# }

#    {
#   "userId" : "VXNlck5vZGU6MQ=="
# }

# }









